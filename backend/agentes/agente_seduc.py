import logging

logger = logging.getLogger(__name__)

def agente_seduc(mensagem, contexto=None):
    try:
        logger.debug(f"Agente SEDUC chamado - Mensagem: '{mensagem}', Contexto: {contexto}")
        
        if contexto is None:
            contexto = {}

        etapa = contexto.get("etapa", "inicio")
        logger.debug(f"Etapa atual: {etapa}")

        # Mocks simples para teste
        vagas_cidades = {
            "Porto Alegre": ["Escola Estadual A", "Escola Estadual B"],
            "Novo Hamburgo": ["Escola Estadual NH1", "Escola Estadual NH2"],
            "Canoas": ["Escola Estadual C1", "Escola Estadual C2"],
            "Caxias do Sul": ["Escola Estadual CS1", "Escola Estadual CS2"]
        }

        if etapa == "inicio":
            resposta = (
                "üè´ **SEDUC - Secretaria da Educa√ß√£o**\n\n"
                "Bem-vindo ao atendimento SEDUC!\n"
                "Por favor, informe sua cidade para continuar."
            )
            contexto.update({
                "etapa": "aguarde_cidade",
                "agente_ativo": "seduc"
            })
            logger.debug("Etapa definida como 'aguarde_cidade'")
            return resposta, contexto

        elif etapa == "aguarde_cidade":
            cidade = mensagem.strip().title()
            logger.debug(f"Cidade informada: {cidade}")
            
            contexto.update({
                "cidade": cidade,
                "etapa": "aguarde_servico",
                "agente_ativo": "seduc"
            })
            
            resposta = (
                f"üìç Cidade **{cidade}** selecionada.\n\n"
                "Escolha o servi√ßo que deseja:\n\n"
                "**1** - Comprovante de matr√≠cula\n"
                "**2** - Hist√≥rico escolar\n"
                "**3** - Vagas escolares dispon√≠veis\n"
                "**4** - Rematr√≠cula\n\n"
                "Digite o **n√∫mero** da op√ß√£o desejada."
            )
            return resposta, contexto

        elif etapa == "aguarde_servico":
            escolha = mensagem.lower().strip()
            cidade = contexto.get("cidade", "sua cidade")
            logger.debug(f"Escolha do servi√ßo: {escolha}")

            if escolha == "1":
                resposta = (
                    f"üìÑ **Comprovante de Matr√≠cula - {cidade}**\n\n"
                    "Para solicitar o comprovante de matr√≠cula:\n"
                    "‚Ä¢ Acesse o portal da SEDUC\n"
                    "‚Ä¢ Ou envie um e-mail para: matricula@seduc.rs.gov.br\n"
                    "‚Ä¢ Tenha em m√£os: CPF do aluno e dados da escola\n\n"
                    "Posso ajudar com outro servi√ßo? Digite o n√∫mero correspondente ou 'menu' para voltar."
                )
            elif escolha == "2":
                resposta = (
                    f"üìã **Hist√≥rico Escolar - {cidade}**\n\n"
                    "Para obter o hist√≥rico escolar:\n"
                    "‚Ä¢ Entre em contato com a escola onde foi matriculado\n"
                    "‚Ä¢ Para escolas extintas: procure a Coordenadoria Regional de Educa√ß√£o\n"
                    "‚Ä¢ Documentos necess√°rios: RG e CPF do interessado\n\n"
                    "Digite outra op√ß√£o ou 'menu' para voltar."
                )
            elif escolha == "3":
                vagas = vagas_cidades.get(cidade, [])
                if vagas:
                    lista_vagas = "‚Ä¢ " + "\n‚Ä¢ ".join(vagas)
                    resposta = (
                        f"üè´ **Vagas Dispon√≠veis em {cidade}**\n\n"
                        f"{lista_vagas}\n\n"
                        "Para mais informa√ß√µes, entre em contato com a escola de interesse.\n"
                        "Digite outra op√ß√£o ou 'menu' para voltar."
                    )
                else:
                    resposta = (
                        f"‚ùå N√£o h√° informa√ß√µes sobre vagas escolares dispon√≠veis para **{cidade}** no momento.\n\n"
                        "Recomendamos entrar em contato com a Coordenadoria Regional de Educa√ß√£o.\n"
                        "Digite outra op√ß√£o ou 'menu' para voltar."
                    )
            elif escolha == "4":
                resposta = (
                    f"üîÑ **Rematr√≠cula - {cidade}**\n\n"
                    "Para rematr√≠cula:\n"
                    "‚Ä¢ Verifique os prazos no portal da SEDUC\n"
                    "‚Ä¢ Geralmente ocorre entre novembro e dezembro\n"
                    "‚Ä¢ Acompanhe o calend√°rio escolar oficial\n\n"
                    "Precisa de mais alguma coisa? Digite o n√∫mero ou 'menu'."
                )
            elif escolha in ["sair", "cancelar", "menu", "voltar"]:
                resposta = (
                    "‚úÖ Encerrando o atendimento SEDUC.\n"
                    "Se precisar de algo mais, √© s√≥ chamar novamente! üòä"
                )
                contexto = {"stage": "final"}
                logger.debug("Finalizando agente SEDUC")
                return resposta, contexto
            else:
                resposta = (
                    "‚ùå Op√ß√£o inv√°lida.\n\n"
                    "Digite:\n"
                    "**1, 2, 3 ou 4** para os servi√ßos\n"
                    "**'menu'** para voltar ao in√≠cio"
                )
                return resposta, contexto

            # Manter na mesma etapa para permitir nova escolha
            contexto.update({
                "etapa": "aguarde_servico",
                "agente_ativo": "seduc"
            })
            return resposta, contexto

        else:
            logger.warning(f"Etapa desconhecida: {etapa}")
            resposta = (
                "‚ùì Desculpe, houve um problema na conversa.\n"
                "Vamos recome√ßar: por favor, informe sua cidade para continuar."
            )
            contexto.update({
                "etapa": "aguarde_cidade",
                "agente_ativo": "seduc"
            })
            return resposta, contexto

    except Exception as e:
        logger.error(f"Erro no agente SEDUC: {str(e)}")
        return (
            "‚ùå Ocorreu um erro no atendimento SEDUC.\n"
            "Por favor, tente novamente ou digite 'menu' para voltar ao in√≠cio."
        ), {"stage": "final"}